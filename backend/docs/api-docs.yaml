openapi: 3.0.1
info:
  title: Digital Stories API
  description: This is an API made with Express for the MERN stack Digital Stories
    application.
  contact:
    email: abdullah.tahir.skipq@gmail.com
  version: 1.0.0
servers:
- url: http://localhost:5544/api
paths:
  /me:
    get:
      tags:
      - Users
      summary: Get the details of currently logged-in user
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
        401:
          description: Expired JSON Web Token (JWT)
          content: {}
        500:
          description: Internal server error
          content: {}
  /num-users:
    get:
      tags:
      - Users
      summary: Get the number of users registered in the app
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  numUsers:
                    type: number
                    description: number of users registered in the app
        401:
          description: Expired JSON Web Token (JWT)
          content: {}
        500:
          description: Internal server error
          content: {}
  /comment:
    post:
      tags:
      - Comments
      summary: Create a comment
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                text:
                  type: string
                user:
                  pattern: ^[0-9a-fA-F]{24}$
                  type: string
                story:
                  pattern: ^[0-9a-fA-F]{24}$
                  type: string
        required: true
      responses:
        201:
          description: Comment posted successfully
          content: {}
        401:
          description: Expired JSON Web Token (JWT)
          content: {}
        422:
          description: Invalid request body
          content: {}
        500:
          description: Internal server error
          content: {}
      x-codegen-request-body-name: body
  /comments/{id}:
    get:
      tags:
      - Comments
      summary: Get comments by Story ID
      parameters:
      - name: id
        in: path
        required: true
        schema:
          pattern: ^[0-9a-fA-F]{24}$
          type: string
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostComments'
        401:
          description: Expired JSON Web Token (JWT)
          content: {}
        404:
          description: Comment not found
          content: {}
        500:
          description: Internal server error
          content: {}
      x-codegen-request-body-name: body
  /register:
    post:
      tags:
        - Auth
      summary: Register a new user
      requestBody:
        description: The user to create
        content:
          'application/json':
            schema:
              required:
              - name
              - username
              - email
              - password
              - confirmPassword
              type: object
              properties:
                name:
                  maxLength: 30
                username:
                  maxLength: 20
                  type: string
                password:
                  pattern: ^[a-zA-Z0-9]{8,25}$
                  type: string
                confirmPassword:
                  pattern: ^[a-zA-Z0-9]{8,25}$
                  type: string
                email:
                  format: email
                  type: string

        required: true
      responses:
        201:
          description: user registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetails'
        409:
          description: Username or email already taken
          content: {}
        422:
          description: Invalid request body
          content: {}
        500:
          description: Internal server error
          content: {}
      x-codegen-request-body-name: user
  /login:
    post:
      tags:
        - Auth
      summary: Login a user
      requestBody:
        description: The user to login as
        content:
          'application/json':
            schema:
              required:
              - password
              - username
              type: object
              properties:
                username:
                  maxLength: 15
                  minLength: 5
                  type: string
                password:
                  pattern: ^[a-zA-Z0-9]{8,25}$
                  type: string
        required: true
      responses:
        200:
          description: user logged in successfully
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/UserDetails'
        401:
          description: Wrong credentials
          content: {}
        422:
          description: Invalid request body
          content: {}
        500:
          description: Internal server error
          content: {}
      x-codegen-request-body-name: user
  /refresh:
    post:
      tags: 
        - Auth
      summary: Renew the access token
      description: Use the refresh token to get a new access token
      responses:
        200:
          description: user logged in successfully
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/UserDetails'
        401:
          description: Expired JSON Web Token (JWT)
          content: {}
        500:
          description: Internal server error
          content: {}
  /logout:
    post:
      tags: 
        - Auth
      summary: Logout the user
      responses:
        200:
          description: Successful logout
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/LogOutUser'
        401:
          description: Expired JSON Web Token (JWT)
          content: {}
        500:
          description: Internal server error
          content: {}
  /engagements/{id}:
    get:
      tags:
        - Engagements
      summary: Get engagement details by user ID
      parameters:
      - name: id
        in: path
        description: ID of the user
        required: true
        schema:
          type: string
      responses:
        200:
          description: Successful response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Engagement'
        401:
          description: Expired JSON Web Token (JWT)
          content: {}
        404:
          description: User not found
          content: {}
  /leaderboard:
    get:
      tags:
      - Leaderboard
      summary: Get the user leaderboard
      responses:
        200:
          description: Successful response
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Leaderboard'
        401:
          description: Expired JSON Web Token (JWT)
          content: {}
        500:
          description: Internal server error
          content: {}
  /stories:
    get:
      tags:
        - Stories
      summary: Get a paginated list of stories
      parameters:
      - name: page
        in: query
        description: The page number of the stories to return
        schema:
          type: integer
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  stories:
                    type: array
                    items:
                      $ref: '#/components/schemas/Story'
                  totalPages:
                    type: number
                    description: Total number of pages of stories
                  page:
                    type: number
                    description: The current page number of the returned stories
                  hasNextPage:
                    type: boolean
                    description: Indicates whether there is a next page of stories
                  hasPrevPage:
                    type: boolean
                    description: Indicates whether there is a previous page of stories
                    example: false
        401:
          description: Expired JSON Web Token (JWT)
          content: {}
        404:
          description: No stories found
          content: {}
        500:
          description: Internal server error
          content: {}
    put:
      tags:
        - Stories
      summary: Update a story
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                mediaType:
                  type: string
                  description: The type of the story(text, image)
                  enum:
                  - text
                  - image
                font:
                  type: string
                  description: The font of the text story
                fontColor:
                  type: string
                  description: The font color of the text story
                caption:
                  type: string
                  description: The caption of the story
                image:
                  type: string
                  description: The image file for image story
                storyId:
                  pattern: ^[0-9a-fA-F]{24}$
                  type: string
                  description: The id of the story to update
        required: true
      responses:
        200:
          description: Story updated successfully
          content: {}
        400:
          description: Invalid request body
          content: {}
        401:
          description: Expired JSON Web Token (JWT)
          content: {}
        500:
          description: Internal server error
          content: {}
      x-codegen-request-body-name: body
    post:
      tags:
        - Stories
      summary: Create a story
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                mediaType:
                  type: string
                  description: The type of the story(text, image)
                  enum:
                  - text
                  - image
                font:
                  type: string
                  description: The font of the text story
                fontColor:
                  type: string
                  description: The font color of the text story
                caption:
                  type: string
                  description: The caption of the story
                image:
                  type: string
                  description: The image file for image story
                postedBy:
                  pattern: ^[0-9a-fA-F]{24}$
                  type: string
                  description: The id of the user that posted the story
        required: true
      responses:
        201:
          description: Story created successfully
          content: {}
        400:
          description: Invalid request body
          content: {}
        401:
          description: Expired JSON Web Token (JWT)
          content: {}
        500:
          description: Internal server error
          content: {}
      x-codegen-request-body-name: body
  /stories/video:
    put:
      tags: 
        - Stories
      summary: Update a story
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                mediaType:
                  type: string
                  description: The type of the story(video)
                  enum:
                  - video
                video:
                  type: string
                  description: The video file for video story
                storyId:
                  pattern: ^[0-9a-fA-F]{24}$
                  type: string
                  description: The id of the story to update
        required: true
      responses:
        200:
          description: Story updated successfully
          content: {}
        400:
          description: Invalid request body
          content: {}
        401:
          description: Expired JSON Web Token (JWT)
          content: {}
        500:
          description: Internal server error
          content: {}
      x-codegen-request-body-name: body
    post:
      tags: 
        - Stories
      summary: Create a story
      requestBody:
        content:
          'application/json':
            schema:
              type: object
              properties:
                mediaType:
                  type: string
                  description: The type of the story(video)
                  enum:
                  - video
                video:
                  type: string
                  description: The video file for video story
                postedBy:
                  pattern: ^[0-9a-fA-F]{24}$
                  type: string
                  description: The id of the user that posted the story
        required: true
      responses:
        201:
          description: Story created successfully
          content: {}
        400:
          description: Invalid request body
          content: {}
        401:
          description: Expired JSON Web Token (JWT)
          content: {}
        500:
          description: Internal server error
          content: {}
      x-codegen-request-body-name: body
  /getTrending:
    get:
      tags: 
        - Stories
      summary: Get trending stories
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  stories:
                    type: array
                    items:
                      $ref: '#/components/schemas/Story'
        401:
          description: Expired JSON Web Token (JWT)
          content: {}
        500:
          description: Internal server error
          content: {}
  /delete/{id}:
    delete:
      tags: 
        - Stories
      summary: Delete story by id
      parameters:
      - name: id
        in: path
        required: true
        schema: {}
      responses:
        200:
          description: Story deleted successfully
          content: {}
        400:
          description: Invalid request body
          content: {}
        401:
          description: Expired JSON Web Token (JWT)
          content: {}
        404:
          description: Story not found
          content: {}
        500:
          description: Internal server error
          content: {}
  /get/{id}:
    get:
      tags: 
        - Stories
      summary: Get story details by id
      parameters:
      - name: id
        in: path
        required: true
        schema: {}
      responses:
        200:
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryDetails'
        400:
          description: Invalid request parameters
          content: {}
        401:
          description: Expired JSON Web Token (JWT)
          content: {}
        404:
          description: Story not found
          content: {}
        500:
          description: Internal server error
          content: {}
components:
  schemas:
    UserDetails:
      type: object
      properties:
        _id:
          type: string
          description: Unique identifier for the user
        name:
          type: string
          description: User's name
        username:
          type: string
          description: User's username
        avatar:
          type: string
          description: URL to user's avatar
        memberSince:
          type: string
          description: Time passed since the user joined the app
        auth:
          type: boolean
          description: Authentication status of user
          default: true
    PostComments:
      type: object
      properties:
        comments:
          type: array
          items:
            type: object
            properties:
              _id:
                pattern: ^[0-9a-fA-F]{24}$
                type: string
              text:
                type: string
              username:
                type: string
              avatarPath:
                type: string
              postedAt:
                type: string
                format: date-time
    LogOutUser:
      type: object
      properties:
        auth:
          type: boolean
          default: false
    EngagementDTOYou:
      type: object
      properties:
        action:
          type: string
          example: commented
        username:
          type: string
          example: primalTraits
        onStory:
          type: string
          format: ObjectId
          example: 63c4eb887a63b31be48cff87
        date:
          type: string
          format: date-time
          example: 2023-01-16T06:17:00.961Z
        key:
          type: string
          format: ObjectId
          example: 63c4ebdc7a63b31be48d00da
        goal:
          type: string
          example: anotherUser
    EngagementDTOOthers:
      type: object
      properties:
        action:
          type: string
          example: downvoted
        username:
          type: string
          example: john
        onStory:
          type: string
          format: ObjectId
          example: 63bae0ff4f44f7ff64a7ae75
        date:
          type: string
          format: date-time
          example: 2023-01-14T21:07:48.534Z
        key:
          type: string
          format: ObjectId
          example: 63c319a44907cc28be6bb5a2
        goal:
          type: string
          example: primalTraits
    Engagement:
      type: object
      properties:
        you:
          type: array
          items:
            $ref: '#/components/schemas/EngagementDTOYou'
        others:
          type: array
          items:
            $ref: '#/components/schemas/EngagementDTOOthers'
    LeaderboardDTO:
      type: object
      properties:
        username:
          type: string
        avatar:
          type: string
        storyCount:
          type: integer
        upVoteCount:
          type: integer
    Leaderboard:
      type: object
      properties:
        leaderboard:
          type: array
          items:
            $ref: '#/components/schemas/LeaderboardDTO'
    Story:
      type: object
      properties:
        _id:
          type: string
          description: The id of the story in database
        caption:
          type: string
          description: The (optional) caption of the story
        font:
          type: string
          description: The font family of the story (for text stories)
        fontColor:
          type: string
          description: The font color of the story (for text stories)
        mediaType:
          type: string
          description: The media type of the story (text, image or video)
        image:
          type: string
          description: The image in the story (for image stories)
        video:
          type: string
          description: The video in the story (for video stories)
        avatarPath:
          type: string
          description: The path for the author's avatar
        upVotes:
          type: string
          description: The upvote count for the story
        downVotes:
          type: string
          description: The downvote count for the story
        date:
          type: string
          description: The creation date for the story
    StoryDetails:
      type: object
      properties:
        _id:
          type: string
          description: The id of the story in database
        caption:
          type: string
          description: The (optional) caption of the story
        font:
          type: string
          description: The font family of the story (for text stories)
        fontColor:
          type: string
          description: The font color of the story (for text stories)
        mediaType:
          type: string
          description: The media type of the story (text, image or video)
        image:
          type: string
          description: The image in the story (for image stories)
        video:
          type: string
          description: The video in the story (for video stories)
        avatarPath:
          type: string
          description: The path for the author's avatar
        upVoteCount:
          type: string
          description: The upvote count for the story
        downVoteCount:
          type: string
          description: The downvote count for the story
        commentCount:
          type: string
          description: The comment count for the story
        createdAt:
          type: string
          description: The creation date for the story
        username:
          type: string
          description: The username of the story author
        postedBy:
          type: string
          description: The id date of the story author
