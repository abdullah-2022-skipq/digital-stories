swagger: "2.0"
info:
  version: "1.0.0"
  title: Digital Stories API
  description: This is an API made with Express for the MERN stack Digital Stories application.
  contact:
    email: abdullah.tahir.skipq@gmail.com
host: localhost:5544
basePath: /api
schemes:
  - http
paths:
  /me:
    get:
      tags: ["Users"]
      summary: Get the details of currently logged-in user
      produces:
        - application/json
      parameters:
        - name: accessToken
          in: cookie
          required: true
          schema:
            type: object
            properties:
              accessToken:
                type: string
                description: Valid JSON Web Token (JWT) for authentication
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/UserDetails"
        401:
          description: Expired JSON Web Token (JWT)
        500:
          description: Internal server error
  /num-users:
    get:
      tags: ["Users"]
      summary: Get the number of users registered in the app
      produces:
        - application/json
      parameters:
        - name: accessToken
          in: cookie
          required: true
          schema:
            type: object
            properties:
              accessToken:
                type: string
                description: Valid JSON Web Token (JWT) for authentication
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              numUsers:
                type: number
                description: number of users registered in the app
        401:
          description: Expired JSON Web Token (JWT)
        500:
          description: Internal server error
  /comment:
    post:
      tags: ["Comments"]
      summary: Create a comment
      produces:
        - application/json
      parameters:
        - name: accessToken
          in: cookie
          required: true
          schema:
            type: object
            properties:
              accessToken:
                type: string
                description: Valid JSON Web Token (JWT) for authentication 
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              text:
                type: string
                required: true
              user:
                type: string
                pattern: "^[0-9a-fA-F]{24}$"
                required: true
              story:
                type: string
                pattern: "^[0-9a-fA-F]{24}$"
                required: true
      responses:
        201:
          description: Comment posted successfully
        401:
          description: Expired JSON Web Token (JWT)
        422:
          description: Invalid request body
        500:
          description: Internal server error
  /comments/{id}:
    get:
      tags: ["Comments"]
      summary: Get comments by Story ID
      produces:
        - application/json
      parameters:
        - name: id
          in: path
          required: true
          type: string
          pattern: "^[0-9a-fA-F]{24}$"
        - name: accessToken
          in: cookie
          required: true
          schema:
            type: object
            properties:
              accessToken:
                type: string
                description: Valid JSON Web Token (JWT) for authentication 
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              text:
                type: string
                required: true
              user:
                type: string
                pattern: "^[0-9a-fA-F]{24}$"
                required: true
              story:
                type: string
                pattern: "^[0-9a-fA-F]{24}$"
                required: true
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/PostComments"
        401:
          description: Expired JSON Web Token (JWT)
        404:
          description: Comment not found
        500:
          description: Internal server error
  
  /register:
    post:
      tags:
        - ["Auth"]
      summary: "Register a new user"
      produces:
        - application/json
      parameters:
          - in: "body"
            name: user
            description: The user to create
            type: object
            required:
              - name
              - username
              - email
              - password
              - confirmPassword
            properties:
              name:
                type: string
                maxLength: 30
              username:
                type: string
                maxLength: 20
              email:
                type: string
                format: email
              password:
                type: string
                pattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d]{8,25}$    
              confirmPassword:
                type: string
                pattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d]{8,25}$    
      responses:
        201:
          description: "user registered successfully"
          schema:
            $ref: "#/definitions/UserDetails"
        422:
          description: Invalid request body
        409:
          description: Username or email already taken
        500:
          description: Internal server error
  /login:
    post:
      tags:
        - ["Auth"]
      summary: "Login a user"
      produces: "application/json"
      parameters:
        - in: "body"
          name: user
          description: The user to login as
          schema:
            type: object
            required:
              - username
              - password
            properties:
              username:
                type: "string"
                minLength: 5
                maxLength: 15
              password:
                type: "string"
                pattern: "^[a-zA-Z0-9]{8,25}$"
      responses:
        200:
          description: "user logged in successfully"
          schema:
            $ref: "#/definitions/UserDetails"
        422:
          description: "Invalid request body"
        401:
          description: "Wrong credentials"
        500:
          description: "Internal server error"
  /refresh:
    post:
      summary: Renew the access token
      description: Use the refresh token to get a new access token
      tags:
      - ["Auth"]
      parameters:
          - name: accessToken
            in: cookie
            required: true
            schema:
              type: object
              properties:
                accessToken:
                  type: string
                  description: Valid JSON Web Token (JWT) for authentication
      responses:
          200:
            description: "user logged in successfully"
            schema:
              $ref: "#/definitions/UserDetails"
          401:
            description: "Expired JSON Web Token (JWT)"
          500:
            description: "Internal server error"
  /logout:
    post:
      tags:
      - ["Auth"]
      summary: Logout the user
      parameters:
          - name: accessToken
            in: cookie
            required: true
            schema:
              type: object
              properties:
                accessToken:
                  type: string
                  description: Valid JSON Web Token (JWT) for authentication  
      responses:
        200:
          description: Successful logout
          schema:
            $ref: "#/definitions/LogOutUser"
        401:
          description: Expired JSON Web Token (JWT)
        500:
          description: Internal server error
  /engagements/{id}:
    get:
      tags:
        - [Engagements]
      summary: Get engagement details by user ID
      parameters:
        - name: id
          in: path
          description: ID of the user
          required: true
          type: string

        - name: accessToken
          in: cookie
          required: true
          schema:
            type: object
            properties:
              accessToken:
                type: string
                description: Valid JSON Web Token (JWT) for authentication
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/Engagement"
        401:
          description: Expired JSON Web Token (JWT)
        404:
          description: User not found
  /leaderboard:
    get:
      tags:
        - Leaderboard
      summary: Get the user leaderboard
      parameters:
        - name: accessToken
          in: cookie
          required: true
          schema:
            type: object
            properties:
              accessToken:
                type: string
                description: Valid JSON Web Token (JWT) for authentication
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/Leaderboard"
        401:
          description: Expired JSON Web Token (JWT)
        500:
          description: Internal server error
  /stories:
    get:
      summary: Get a paginated list of stories
      tags:
        - ['Stories']
      produces:
        - application/json
      parameters:
        - name: accessToken
          in: cookie
          required: true
          schema:
            type: object
            properties:
              accessToken:
                type: string
                description: Valid JSON Web Token (JWT) for authentication
        - in: query
          name: page
          type: integer
          required: false
          description: The page number of the stories to return
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              stories:
                type: array
                items:
                  $ref: "#/definitions/Story"
              totalPages:
                type: number
                description: Total number of pages of stories
              page:
                type: number
                description: The current page number of the returned stories
              hasNextPage:
                type: boolean
                description: Indicates whether there is a next page of stories
              hasPrevPage:
                type: boolean
                description: Indicates whether there is a previous page of stories
                example: false
        401:
          description: Expired JSON Web Token (JWT)
        404:
          description: No stories found
        500:
          description: Internal server error
    post:
      summary: Create a story
      tags:
        - ['Stories']
      produces:
        - application/json
      parameters:
        - name: accessToken
          in: cookie
          required: true
          schema:
            type: object
            properties:
              accessToken:
                type: string
                description: Valid JSON Web Token (JWT) for authentication
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              mediaType:
                type: string
                description: The type of the story(text, image)
                enum: [text, image]
                required: true
              font:
                type: string
                description: The font of the text story
              fontColor:
                type: string
                description: The font color of the text story
              caption:
                type: string
                description: The caption of the story
              image:
                type: string
                description: The image file for image story
              postedBy:
                type: string
                description: The id of the user that posted the story
                pattern: "^[0-9a-fA-F]{24}$"
                required: true
      responses:
        201:
          description: Story created successfully
        400:
          description: Invalid request body
        401:
          description: Expired JSON Web Token (JWT)
        500:
          description: Internal server error
    put:
      summary: Update a story
      tags:
        - [Stories]
      produces:
        - application/json
      parameters:
        - name: accessToken
          in: cookie
          required: true
          schema:
            type: object
            properties:
              accessToken:
                type: string
                description: Valid JSON Web Token (JWT) for authentication
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              mediaType:
                type: string
                description: The type of the story(text, image)
                enum: [text, image]
                required: true
              font:
                type: string
                description: The font of the text story
              fontColor:
                type: string
                description: The font color of the text story
              caption:
                type: string
                description: The caption of the story
              image:
                type: string
                description: The image file for image story
              storyId:
                type: string
                description: The id of the story to update
                pattern: "^[0-9a-fA-F]{24}$"
                required: true
      responses:
        200:
          description: Story updated successfully
        400:
          description: Invalid request body
        401:
          description: Expired JSON Web Token (JWT)
        500:
          description: Internal server error

  /stories/video:
    post:
      summary: Create a story
      tags:
        - ['Stories']
      produces:
        - application/json
      parameters:
        - name: accessToken
          in: cookie
          required: true
          schema:
            type: object
            properties:
              accessToken:
                type: string
                description: Valid JSON Web Token (JWT) for authentication
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              mediaType:
                type: string
                description: The type of the story(video)
                enum: [video]
                required: true
              video:
                type: string
                description: The video file for video story
              postedBy:
                type: string
                description: The id of the user that posted the story
                pattern: "^[0-9a-fA-F]{24}$"
                required: true
      responses:
        201:
          description: Story created successfully
        400:
          description: Invalid request body
        401:
          description: Expired JSON Web Token (JWT)
        500:
          description: Internal server error
    put:
      summary: Update a story
      tags:
        - [Stories]
      produces:
        - application/json
      parameters:
        - name: accessToken
          in: cookie
          required: true
          schema:
            type: object
            properties:
              accessToken:
                type: string
                description: Valid JSON Web Token (JWT) for authentication
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              mediaType:
                type: string
                description: The type of the story(video)
                enum: [video]
                required: true
              video:
                type: string
                description: The video file for video story
              storyId:
                type: string
                description: The id of the story to update
                pattern: "^[0-9a-fA-F]{24}$"
                required: true
      responses:
        200:
          description: Story updated successfully
        400:
          description: Invalid request body
        401:
          description: Expired JSON Web Token (JWT)
        500:
          description: Internal server error
  /getTrending:
    get:
      summary: Get trending stories
      tags:
        - ['Stories']
      produces:
        - application/json
      parameters:
        - name: accessToken
          in: cookie
          required: true
          schema:
            type: object
            properties:
              accessToken:
                type: string
                description: Valid JSON Web Token (JWT) for authentication
      responses:
        200:
          description: Successful response
          schema:
            type: object
            properties:
              stories:
                type: array
                items:
                  $ref: "#/definitions/Story"
        401:
          description: Expired JSON Web Token (JWT)
        500:
          description: Internal server error
  /delete/{id}:
    delete:
      summary: Delete story by id
      produces:
        - application/json
      tags:
        - ['Stories']
      parameters:
        - name: accessToken
          in: cookie
          required: true
          schema:
            type: object
            properties:
              accessToken:
                type: string
                description: Valid JSON Web Token (JWT) for authentication
        - in: path
          name: id
          required: true
          schema:
            type: string
            description: The id of the story
            pattern: "^[0-9a-fA-F]{24}$"
      responses:
        200:
          description: Story deleted successfully
        400:
          description: Invalid request body
        401:
          description: Expired JSON Web Token (JWT)
        404:
          description: Story not found
        500:
          description: Internal server error
  /get/{id}:
    get:
      summary: Get story details by id
      produces:
        - application/json
      tags:
        - ['Stories']
      parameters:
        - name: accessToken
          in: cookie
          required: true
          schema:
            type: object
            properties:
              accessToken:
                type: string
                description: Valid JSON Web Token (JWT) for authentication
        - in: path
          name: id
          required: true
          schema:
            type: string
            description: The id of the story
            pattern: "^[0-9a-fA-F]{24}$"
      responses:
        200:
          description: Successful response
          schema:
            $ref: "#/definitions/StoryDetails"
        400:
          description: Invalid request parameters
        401:
          description: Expired JSON Web Token (JWT)
        404:
          description: Story not found
        500:
          description: Internal server error

definitions:
  UserDetails:
    type: object
    properties:
      _id:
        type: string
        description: Unique identifier for the user
      name:
        type: string
        description: User's name
      username:
        type: string
        description: User's username
      avatar:
        type: string
        description: URL to user's avatar
      memberSince:
        type: string
        description: Time passed since the user joined the app
      auth:
        type: boolean
        default: true
        description: Authentication status of user
  PostComments:
    type: object
    properties:
      comments:
        type: array
        items:
          type: object
          properties:
            _id:
              type: string
              pattern: "^[0-9a-fA-F]{24}$"
            text:
              type: string
            username:
              type: string
            avatarPath:
              type: string
            postedAt:
              type: string
              format: "date-time"
  LogOutUser:
    type: object
    properties:
      user:
        type: null
        default: null
      auth:
        type: boolean
        default: false
  EngagementDTOYou:
    type: object
    properties:
      action:
        type: string
        example: commented
      username:
        type: string
        example: primalTraits
      onStory:
        type: string
        format: ObjectId
        example: 63c4eb887a63b31be48cff87
      date:
        type: string
        format: date-time
        example: "2023-01-16T06:17:00.961Z"
      key:
        type: string
        format: ObjectId
        example: 63c4ebdc7a63b31be48d00da
      goal:
        type: string
        example: anotherUser
  EngagementDTOOthers:
    type: object
    properties:
      action:
        type: string
        example: downvoted
      username:
        type: string
        example: john
      onStory:
        type: string
        format: ObjectId
        example: 63bae0ff4f44f7ff64a7ae75
      date:
        type: string
        format: date-time
        example: "2023-01-14T21:07:48.534Z"
      key:
        type: string
        format: ObjectId
        example: 63c319a44907cc28be6bb5a2
      goal:
        type: string
        example: primalTraits
  Engagement:
    type: object
    properties:
      you:
        type: array
        items:
          $ref: "#/definitions/EngagementDTOYou"
      others:
        type: array
        items:
          $ref: "#/definitions/EngagementDTOOthers"
  LeaderboardDTO:
    type: object
    properties:
      username:
        type: string
      avatar:
        type: string
      storyCount:
        type: integer
      upVoteCount:
        type: integer
  Leaderboard:
    type: object
    properties:
      leaderboard:
        type: array
        items:
          $ref: "#/definitions/LeaderboardDTO"
  Story:
    type: object
    properties:
      _id:
        type: string
        description: The id of the story in database
      caption:
        type: string
        description: The (optional) caption of the story
      font:
        type: string
        description: The font family of the story (for text stories)
      fontColor:
        type: string
        description: The font color of the story (for text stories)
      mediaType:
        type: string
        description: The media type of the story (text, image or video)
      image:
        type: string
        description: The image in the story (for image stories)
      video:
        type: string
        description: The video in the story (for video stories)
      avatarPath:
        type: string
        description: The path for the author's avatar
      upVotes:
        type: string
        description: The upvote count for the story
      downVotes:
        type: string
        description: The downvote count for the story
      date:
        type: string
        description: The creation date for the story
  StoryDetails:
    type: object
    properties:
      _id:
        type: string
        description: The id of the story in database
      caption:
        type: string
        description: The (optional) caption of the story
      font:
        type: string
        description: The font family of the story (for text stories)
      fontColor:
        type: string
        description: The font color of the story (for text stories)
      mediaType:
        type: string
        description: The media type of the story (text, image or video)
      image:
        type: string
        description: The image in the story (for image stories)
      video:
        type: string
        description: The video in the story (for video stories)
      avatarPath:
        type: string
        description: The path for the author's avatar
      upVoteCount:
        type: string
        description: The upvote count for the story
      downVoteCount:
        type: string
        description: The downvote count for the story
      commentCount:
        type: string
        description: The comment count for the story
      createdAt:
        type: string
        description: The creation date for the story
      username:
        type: string
        description: The username of the story author
      postedBy:
        type: string
        description: The id date of the story author
